name: Deploy Python Backend
on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - name: Checkout code
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
        
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
        
    - name: Install dependencies
      run: |
        conda env update --file environment.yml --name base
        
    - name: Lint with flake8
      run: |
        conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        conda install pytest
        pytest

        # Build Docker image for backend
    - name: Build Docker image for Backend
      run: docker build -t your-username/your-backend:latest ./backend
    
    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Push Docker image to Docker Hub
    - name: Push Docker image for Backend
      run: docker push your-username/your-backend:latest

    # Deploy the backend service (via SSH, Kubernetes, etc.)
    # - name: Deploy Python Backend
    #   run: |
    #     ssh -o StrictHostKeyChecking=no user@your-server-ip << 'EOF'
    #       docker pull your-username/your-backend:latest
    #       docker stop backend-container || true
    #       docker rm backend-container || true
    #       docker run -d --name backend-container your-username/your-backend:latest
    #     EOF
    #   env:
    #     PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
